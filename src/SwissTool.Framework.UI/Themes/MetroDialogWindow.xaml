<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controlzEx="urn:controlzex"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:swisstool="clr-namespace:SwissTool.Framework.UI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <mah:ThicknessBindingConverter x:Key="ThicknessBindingConverter" />
    <mah:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />

    <ControlTemplate x:Key="MahApps.Templates.MetroWindow" TargetType="{x:Type swisstool:MetroDialogWindow}">
        <Grid Background="{TemplateBinding Background}"
              LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
              RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              UseLayoutRounding="True">
            <AdornerDecorator>
                <Grid UseLayoutRounding="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Left}}" />
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  left window commands, title, right window commands  -->
                        <ColumnDefinition Width="*" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Right}}" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Top}}" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_WindowTitleBackground"
                               Grid.Row="1"
                               Grid.Column="1"
                               Grid.ColumnSpan="3"
                               Fill="{TemplateBinding WindowTitleBrush}"
                               Focusable="False"
                               StrokeThickness="0" />

                    <!--  icon  -->
                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <mah:MetroThumb x:Name="PART_WindowTitleThumb"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}"
                                    UseLayoutRounding="True" />

                    <DockPanel Grid.Row="1"
                               Grid.Column="2"
                               VerticalAlignment="Top"
                               Focusable="False">
                        <!--  the left window commands  -->
                        <mah:ContentPresenterEx x:Name="PART_LeftWindowCommands"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                VerticalAlignment="Top"
                                                controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                DockPanel.Dock="Left"
                                                Focusable="False" />
                        <!--  the right window commands  -->
                        <mah:ContentPresenterEx x:Name="PART_RightWindowCommands"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                VerticalAlignment="Top"
                                                controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                DockPanel.Dock="Right"
                                                Focusable="False" />
                        <!--  the title bar  -->
                        <mah:MetroThumbContentControl x:Name="PART_TitleBar"
                                                      Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                      HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                      HorizontalContentAlignment="Stretch"
                                                      VerticalContentAlignment="Stretch"
                                                      Content="{TemplateBinding Title}"
                                                      ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                                                      ContentTemplate="{TemplateBinding TitleTemplate}"
                                                      Focusable="False">
                            <ContentControl.Foreground>
                                <MultiBinding Converter="{x:Static mah:BackgroundToForegroundConverter.Instance}">
                                    <Binding ElementName="PART_WindowTitleBackground"
                                             Mode="OneWay"
                                             Path="Fill" />
                                    <Binding Mode="OneWay"
                                             Path="TitleForeground"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </ContentControl.Foreground>
                        </mah:MetroThumbContentControl>
                    </DockPanel>

                    <!--  the window button commands  -->
                    <mah:ContentPresenterEx x:Name="PART_WindowButtonCommands"
                                            Grid.Row="1"
                                            Grid.RowSpan="2"
                                            Grid.Column="3"
                                            Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            VerticalAlignment="Top"
                                            Panel.ZIndex="1"
                                            controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            Focusable="False" />

                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Image}" Width="48" Height="48" />
                        <StackPanel Grid.Column="1" Margin="10,0,0,0">
                            <Label Padding="0" FontWeight="Bold" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Heading, FallbackValue='Heading'}" />
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SubHeading, FallbackValue='Description'}" />
                        </StackPanel>
                    </Grid>

                    <!--  the main window content  -->
                    <mah:MetroContentControl x:Name="PART_Content"
                                             Grid.Row="3"
                                             Grid.Column="0"
                                             Grid.ColumnSpan="5"
                                             FocusVisualStyle="{x:Null}"
                                             IsTabStop="False"
                                             OnlyLoadTransition="True"
                                             TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                                             UseLayoutRounding="True">
                        <mah:ContentPresenterEx x:Name="PART_ContentPresenter"
                                                Margin="10,0,10,0"
                                                controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                                UseLayoutRounding="False" />
                    </mah:MetroContentControl>

                    <DockPanel LastChildFill="True" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="5" Margin="10" Panel.ZIndex="1">
                        <Label DockPanel.Dock="Left" Padding="0,5,0,5" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FooterText}"></Label>
                        <WrapPanel  HorizontalAlignment="Right">
                            <Button Width="80" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AcceptCommand}" IsDefault="True" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AcceptCommandLabel, FallbackValue='OK'}" />
                            <Button Width="80" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CancelCommand}" Margin="10,0,0,0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShowCancelButton, Converter={StaticResource BooleanToVisibilityConverter}}">Cancel</Button>
                        </WrapPanel>

                    </DockPanel>

                    <!--  disables the main content when a modal flyout is shown  -->
                    <Rectangle Name="PART_FlyoutModal"
                               Grid.Row="1"
                               Grid.RowSpan="2"
                               Grid.Column="1"
                               Grid.ColumnSpan="3"
                               Fill="{TemplateBinding FlyoutOverlayBrush}"
                               Visibility="Hidden" />
                    <mah:MetroThumb x:Name="PART_FlyoutModalDragMoveThumb"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}"
                                    Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />

                    <!--  flyouts  -->
                    <ContentControl Grid.Row="1"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    VerticalAlignment="Stretch"
                                    Panel.ZIndex="2"
                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Focusable="False"
                                    KeyboardNavigation.TabNavigation="None" />

                    <!--  inactive dialog container  -->
                    <Grid x:Name="PART_MetroInactiveDialogsContainer"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="3"
                          FocusVisualStyle="{x:Null}" />

                    <!--  overlay effect container  -->
                    <Grid x:Name="PART_OverlayBox"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="4"
                          Background="{TemplateBinding OverlayBrush}"
                          FocusVisualStyle="{x:Null}"
                          Focusable="False"
                          Opacity="0"
                          Visibility="Hidden" />

                    <!--  active dialog container  -->
                    <Grid x:Name="PART_MetroActiveDialogContainer"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="5"
                          FocusVisualStyle="{x:Null}" />
                </Grid>
            </AdornerDecorator>

            <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding GlowBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    UseLayoutRounding="True" />
            <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="False"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ShowDialogsOverTitleBar" Value="False">
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.RowSpan" Value="1" />
            </Trigger>

            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="ShowTitleBar" Value="False">
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="False" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="True" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <!--  HitTest visibility  -->
            <Trigger Property="GlowBrush" Value="{x:Null}">
                <Setter TargetName="PART_Border" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_ContentPresenter" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_LeftWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_RightWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_WindowButtonCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="PART_Border" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_ContentPresenter" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_LeftWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_RightWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_TitleBar" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_WindowButtonCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="MahApps.Templates.MetroWindow.Center" TargetType="{x:Type swisstool:MetroDialogWindow}">
        <Grid Background="{TemplateBinding Background}"
              LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
              RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              UseLayoutRounding="True">
            <AdornerDecorator>
                <Grid UseLayoutRounding="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Left}}" />
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  left window commands, title, right window commands  -->
                        <ColumnDefinition Width="*" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Right}}" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Top}}" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_WindowTitleBackground"
                               Grid.Row="1"
                               Grid.Column="1"
                               Grid.ColumnSpan="3"
                               Fill="{TemplateBinding WindowTitleBrush}"
                               Focusable="False"
                               StrokeThickness="0" />

                    <!--  icon  -->
                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <mah:MetroThumb x:Name="PART_WindowTitleThumb"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}"
                                    UseLayoutRounding="True" />

                    <!--  the title bar  -->
                    <mah:MetroThumbContentControl x:Name="PART_TitleBar"
                                                  Grid.Row="1"
                                                  Grid.Column="0"
                                                  Grid.ColumnSpan="5"
                                                  Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                  HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  Content="{TemplateBinding Title}"
                                                  ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                                                  ContentTemplate="{TemplateBinding TitleTemplate}"
                                                  Focusable="False">
                        <ContentControl.Foreground>
                            <MultiBinding Converter="{x:Static mah:BackgroundToForegroundConverter.Instance}">
                                <Binding ElementName="PART_WindowTitleBackground"
                                         Mode="OneWay"
                                         Path="Fill" />
                                <Binding Mode="OneWay"
                                         Path="TitleForeground"
                                         RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </ContentControl.Foreground>
                    </mah:MetroThumbContentControl>

                    <DockPanel Grid.Row="1"
                               Grid.Column="2"
                               VerticalAlignment="Top"
                               Panel.ZIndex="1"
                               Focusable="False">
                        <!--  the left window commands  -->
                        <mah:ContentPresenterEx x:Name="PART_LeftWindowCommands"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                VerticalAlignment="Top"
                                                controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                DockPanel.Dock="Left"
                                                Focusable="False" />
                        <!--  the right window commands  -->
                        <mah:ContentPresenterEx x:Name="PART_RightWindowCommands"
                                                Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                VerticalAlignment="Top"
                                                controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                DockPanel.Dock="Right"
                                                Focusable="False" />
                        <!--  the fake title bar  -->
                        <Grid />
                    </DockPanel>

                    <!--  the window button commands  -->
                    <mah:ContentPresenterEx x:Name="PART_WindowButtonCommands"
                                            Grid.Row="1"
                                            Grid.RowSpan="2"
                                            Grid.Column="3"
                                            Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            VerticalAlignment="Top"
                                            Panel.ZIndex="1"
                                            controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            Focusable="False" />

                    <!--  the main window content  -->
                    <mah:MetroContentControl x:Name="PART_Content"
                                             Grid.Row="2"
                                             Grid.Column="0"
                                             Grid.ColumnSpan="5"
                                             FocusVisualStyle="{x:Null}"
                                             IsTabStop="False"
                                             OnlyLoadTransition="True"
                                             TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                                             UseLayoutRounding="True">
                        <mah:ContentPresenterEx x:Name="PART_ContentPresenter"
                                                Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static mah:ThicknessSideType.Top}}"
                                                controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
                                                UseLayoutRounding="False" />
                    </mah:MetroContentControl>

                    <!--  disables the main content when a modal flyout is shown  -->
                    <Rectangle Name="PART_FlyoutModal"
                               Grid.Row="1"
                               Grid.RowSpan="2"
                               Grid.Column="1"
                               Grid.ColumnSpan="3"
                               Fill="{TemplateBinding FlyoutOverlayBrush}"
                               Visibility="Hidden" />
                    <mah:MetroThumb x:Name="PART_FlyoutModalDragMoveThumb"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Style="{StaticResource MahApps.Styles.Thumb.WindowTitle}"
                                    Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />

                    <!--  flyouts  -->
                    <ContentControl Grid.Row="0"
                                    Grid.RowSpan="3"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    VerticalAlignment="Stretch"
                                    Panel.ZIndex="2"
                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Focusable="False"
                                    KeyboardNavigation.TabNavigation="None" />

                    <!--  inactive dialog container  -->
                    <Grid x:Name="PART_MetroInactiveDialogsContainer"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="3"
                          FocusVisualStyle="{x:Null}" />

                    <!--  overlay effect container  -->
                    <Grid x:Name="PART_OverlayBox"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="4"
                          Background="{TemplateBinding OverlayBrush}"
                          FocusVisualStyle="{x:Null}"
                          Focusable="False"
                          Opacity="0"
                          Visibility="Hidden" />

                    <!--  active dialog container  -->
                    <Grid x:Name="PART_MetroActiveDialogContainer"
                          Grid.Row="1"
                          Grid.RowSpan="2"
                          Grid.Column="1"
                          Grid.ColumnSpan="3"
                          Panel.ZIndex="5"
                          FocusVisualStyle="{x:Null}" />
                </Grid>
            </AdornerDecorator>

            <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding GlowBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    UseLayoutRounding="True" />
            <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="False"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Resources>
            <Storyboard x:Key="OverlayFastSemiFadeIn"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard x:Key="OverlayFastSemiFadeOut"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0.0" />
            </Storyboard>
        </ControlTemplate.Resources>

        <ControlTemplate.Triggers>
            <Trigger Property="ShowDialogsOverTitleBar" Value="False">
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="2" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.RowSpan" Value="1" />
            </Trigger>

            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="ShowTitleBar" Value="False">
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="False" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="True" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <!--  HitTest visibility  -->
            <Trigger Property="GlowBrush" Value="{x:Null}">
                <Setter TargetName="PART_Border" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_ContentPresenter" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_LeftWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_RightWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
                <Setter TargetName="PART_WindowButtonCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="False" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="PART_Border" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_ContentPresenter" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_LeftWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_RightWindowCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_TitleBar" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter TargetName="PART_WindowButtonCommands" Property="controlzEx:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Storyboard x:Key="OverlayFastSemiFadeIn"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
        <DoubleAnimation To=".7" />
    </Storyboard>
    <Storyboard x:Key="OverlayFastSemiFadeOut"
                AccelerationRatio=".97"
                BeginTime="0:0:0"
                SpeedRatio="2.7"
                Storyboard.TargetProperty="Opacity">
        <DoubleAnimation To="0.0" />
    </Storyboard>

    <Style TargetType="{x:Type swisstool:MetroDialogWindow}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FlyoutOverlayBrush" Value="{DynamicResource MahApps.Brushes.Window.FlyoutOverlay}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="NonActiveBorderBrush" Value="{DynamicResource MahApps.Brushes.Border.NonActive}" />
        <Setter Property="NonActiveGlowBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource MahApps.Brushes.WindowTitle.NonActive}" />
        <Setter Property="OverlayBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="OverlayFadeIn" Value="{StaticResource OverlayFastSemiFadeIn}" />
        <Setter Property="OverlayFadeOut" Value="{StaticResource OverlayFastSemiFadeOut}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroWindow}" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="TitleForeground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="8 -1 1 0"
                               VerticalAlignment="Center"
                               FontFamily="{DynamicResource MahApps.Fonts.Family.Window.Title}"
                               FontSize="{DynamicResource MahApps.Font.Size.Window.Title}"
                               Text="{TemplateBinding Content}"
                               TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowTitleBrush" Value="{DynamicResource MahApps.Brushes.WindowTitle}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}" Value="False">
                <Setter Property="IconTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <mah:MultiFrameImage Width="{TemplateBinding Width}"
                                                 Height="{TemplateBinding Height}"
                                                 MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                                 RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                                 RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
                                                 Source="{TemplateBinding Content}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="TitleAlignment" Value="Center">
                <Setter Property="Template" Value="{StaticResource MahApps.Templates.MetroWindow.Center}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>